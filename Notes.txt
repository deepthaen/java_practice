Class -->
    Its template from which we create object, which has group of objects.
   why - we use class to store varaibles,objects, methods
   where -- we use in any kind of project , under any package com.pack
   what -- we write methods, constructors- we extend and create object, reflection

package -->
    package is a group of classes combined to gether and can be builded as library and import as single package

Different Packages Available in Java?
        java.lang

Object -->
    Which has data(value) and functionality.
    Object is blue print of class and object is base for jave package
    Object class is present in java.lang package
   why - We us to create variables or methods
   where - we use in class

create proper Java class -- done
create Abstract class -- done
Create interface -- done
Create ENUM  -- done
Create Non static method  -- done
static method  -- done
return type method - done
create constructor - done
add name to String - done
add number to integer - done
add salary to double  - done
add bank account number to long - done
add true or false to boolean - done
add petrol price to float - done
add character to char - done
List all data types -
1.byte, 2.short, 3. char, 4.boolean, 5. int, 6. float, 7. double, 8. long, 9. Array, 10. String

JDK - Java Devlopment kit - is a software tool, used to devlop java application and implemets jvm and jre
JVM - Java Vitrual Machine - its set of software tool used to load, verifes and execute code gives run time env, present in software and hardware
JRE - Java runtime enviorment  - is a sofware tool used  develop java application and implmennts jvm,

Versions of Java -
1, 1.1, 1.2, 1.3, 1.4, 1.5, 5, 6, 7, 8, 9, 10, 11
Current Java Version- java version "15.0.1" 2020-10-20

Java is platform depenedent or indepenednt? - its platform independent

List different pacakages in Java? -
    import java.util.*;
    import java.awt.*;
    import java.lang.*;

What is String ?
    String is a Immutable class
    String S ="Deeptha";

What are different Methods Avavailable in String?
   - charAt()
   - contains()
   - equals()
   - compareTo()
   - toString()
   - concat()
   - split()

what is mean by Concat and append?
    - Concat is used to add anything at end of  string
    - Append is used to add string or character sequence by using string buffer - (append is default in string bufer)

What all can be added inside a class ?
    - main method
    - static method
    - non method
    - variables - Data types
    - constructor
    - fields
    - static - before main method
    - non static -- after main method
    - Creating object
    - import
    - extends
    - add package
    - implements
    - keywords

what is System.out.println?
    System - Class
    out -- function
    println -- method

what is extends ?
    - Accessing something from super class to sub class
    - access both clas and abstract class, by using extends


Can u create a constructor ?

- Constructor is blue print of class, which will have name as class name, doesnot have return type, which executed when ever object is created.
- There different types of constructors: 1. default constructor, and parameterized constructor and non pamatermized constructor.
- Will declare funstionality in c0onstructor of parent class and we will use in child by creating object of parent class.

what is super ?
    - Super refers to parent class, its keyword, used in constructor

what is this?
    - is keyword, refers to current class.


Programs ::
    1. Sum of 2 numbers ? - done
    2. Print your name 10 times ? - done
    3. Create arraylist and add your classmates names? - done
    4. create String array and add Months (jan,feb,marc)? - done
    5. create char araay and add alphabets [a,b,c,d,-- Z]? - done

     what is ASCII value ?
      - Ascii value are 7 bit character value, represents the numerical value of a character
    - what is askey value for a-z and A-Z?
        - A = 65 and B=66..... Z=90
        - a = 97 and b = 98 .....z=122

    what is binary codes ?
        A binary code which converts our programing syntax to 0's and 1's

     -Java Source are converted to java binary code in JVM, which in term convert to native code usinng jit,which will complies and execute code
           Binary code will be in form of 0 and 1
    what is 0 and 1 ?
     - Binary Code
     0 - OFF
     1 - ON

    what is capacity of Integer,String,char,Double,float,long? how many bytes it will consume
    1 Byte = 8 bits

    8 bits = 0 0 0 0 0 0 0 0


    - Boolean = 1byte 0 0 0 0 0 0 0 0
    - char   = 2byte 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    - byte   = 8 bits
    - short  = 2byte
    - int   = 4byte 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 - 32 bits
    - float  = 4byte
    - long   = 8byte
    - double   = 8byte
    - String   = 2byte

        int a =1; // 32 bits / 4 bytes
        int = 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
        int a =2; // 32 bits / 4 bytes
        int = 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0

    add commit push

BInary code series from 1 to 10 ?
   0- 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
   1- 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
   2- 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1

    0000
    0001
    0010
    0011
    0100
    0101






Note :: To Be discussed
1. COnstructor

What is interface ?
    -- INterface is kind of a class
        class - public class name{}
        interface- public interface name{};
    -- when we dono what to implement, then i create interface
        and define functionality
        Example ::
            i wan to buy a audi car

            FUnctionality ::
                car(String model);
                Engine(String type);
            Implementation ::
                public void car(String model){
                    model = Audi A6;
                }
    -- we can achieve 100% abstraction in interface
    -- we can write without body


What is Abstraction ?
   Hide implemtation and shoe functionality



Questions ::
    1. Create String buffer,string builder and use some methods and list all methods available - yet to discuss
    2. Calculate sum of array - done
    3. write a code swap 2 numbers  - done
    4. Write a code replace all and print only alphabets (input :: sdfghj1234567@#$%^asdfg) - done

    input :: sdfghj1234567@#$%^asdfg
    output :: sdfghjasdfg

    5. understand deep in constructor
    6, understand deep in interface
    7 . understand deep in abstraction


19/11/2021
-
Diff btw Abstract and interface?
    -- interface
        -- it is a mechanisam to declare methods, when we donon what has to be implementation
        -- we add interface keyword instead of class
        -- we can declare methods here and implement in different classes
        -- here we can achive 100% abstraction
        -- not manditorily we shud mention public
        -- the interface can be used in different class by using implements keyword
    -- abstract
        -- it is a kind of class, which we add in the place class name
             public abstract class name{}
        -- we can declare method and we can implement also
        -- here 100% abstraction is not possible
        -- we can access abstract class by using extends
        -- here when we want declare a method, we have to add abstract in method
            abstract void method():


When we go for interface?
    -- when we dono actual requirement, then to just declare what has to be done

When we go for Abstract?
    -- we go when we have partial requirement, where in i can declare and implement as well


abstract vs Abstraction ?
    abstract : computer science
     its kind of class, where we declare and implement methods
    abstraction :: concept (Flow chart)
        its a oops concept


oops ::
    Abstraction
    Polymorpyshm
    Encapsulation
    Inheritance
What is compile and run time error?

Questions ::
    Create interface and implemt in different class - done
    create 2 interface and implement in different class - done
    create interface and implment in one class and extend to different class and call methods in main method - done
    Create interface
        create retunable method   -- explain return concept
        create non retunable method
        create parametrised method(String name)  -- explain return concept
        check wether u can create constructor ? NO
    What is interface   ?
    - Interface is process where it will hide implemention and show function declaration
    - we can achive 100% Abstraction
    - we can have constructor in intrface
    - it will be  public final static and Abstract
    - Will not conatin concetre method


    Create abstract class and extend to other class - done
    Cretae 2 abstract class and try to extend both   ? - Not Possible
    Create abstract class and extend to other class and extend to other class and write in main method - done
    Create abstract class with only declaration - done
    Create abstract class with only implementation - done
    Create Abstract class with both declare and implementation - done

    what is abstract?
     - Abstract is kind of class which is access specififer
     - We go for Abstract when we does not have complete requirement clarification
     of application, let say we have req clarification some functionality and does
     not have req clarification on few other part of appli then we go for abstract
      - In Abstract class we can have method declaration and method implementation both
      - In abstract class if anyone method has just method declaration then have
      use abstract as keyword for method declaration and class
      - 100% abstraction is not possible

    Sum from 1to 100 numbers? - Dome
    i will give a character, print what ASCII value for it (Ex = A=60 a=97) - done

*** Doubt - when will be constructor called, when it be executed ?
    -- when a object is created, first constructor will be called
            What constructor will be having ?
                it will have which have assigned anything in current class
                    this.driver = driver;



OOPS ::

Abstraction ::
    what is abstraction?
        -- HIde Implementation and show functionality
    where we use Abstraction ?
        -- we use in Interface and abstract
        -- in interface we hide implementationa nd show functionality
            -- hide implementation -- when we click on method it will take to declaration


Inheritance ::
    what is inheritance ?
        -- accessing something from child class to super class
    How we inherit ?
        -- by using Extends and implements
    where we use ?
        -- We use when we want to inherit any class or an interface or abstract class
    super ?
        Accessing something from parent class or sub class


Question  ::
    Calucate sUM of 1 to 100 ?

    int a =1;
    int b=5;

    o/p = 1+2+3+4+5 = 15

    First appraoch :: I will use for loop and traverse from a to b and keep adding
    Second Approach :: using N naturals number, N*(N+1)/2

 TIme complexity::
  BEST case
  WORST case

Question ::
    Factotial of A number ?
    int a =5;
    o/p = 5*4*3*2*1 = 125

    first appraoch ::traverse till a number

    int a=0;
    int temp=1;
    for(int i=a;i>=1;i--){
        temp=temp*i;
    }
    Second Appraoch ::  recursion
    int a=5
        public int factorial(int a){
            return a*factorial(a-1);
        }

Sort Array ::

i/p :: [1,3,4,5,7,2]
o/p :: [1,2,3,4,5,7]
---> i will travese through complete array
     use two for loop nested for loop
     inner for loop i will compare each index value and if first is less then second value then will move to next index
     if first value is greater then second value then will move value ti temp variable and change positin

    1. First approach by sort fnction
     a.Array(sort)
   2.   Sceond Approch by using will travese through complate and use two for loop


Inheritance Example ::
    1. BasePage
        public static WebDriver laucnhBrowser(){
            driver = new ChromeDriver();
            return driver;
        }
    2. LoginPage extends BasePage
        public static void loginApp(WebDriver driver){
            driver.findelement.click();
        }

    3. Test extends LoginPage
        public static vois main(String[] arg){
            WebDriver driver = launchBrowser();
            loginApp(driver);
        }

   Example 2 ::
   1. BasePage
           public static WebDriver laucnhBrowser(){
               driver = new ChromeDriver();
               return driver;
           }
       2. LoginPage extends BasePage
           public static void loginApp(){
                driver=launchBrowser();
               driver.findelement.click();
           }

       3. Test extends LoginPage
           public static vois main(String[] arg){
               loginApp();
           }


Encapsulation ::
    Encap - collect form information
    Insulation - Set something or put something

    Tablet - some medicine, apply to body

    Def :: wrapping data and code  into a single unit

    1. Getter
    2. Setter
    3. Data hiding

    Example ::
        public class cse(){
            public String students;
            public String teacher;

            public void setStudents(String students){
                this.students =students;
            }
            public String getStudents(){
            return students;
            }

        }

        main(){
            Cse c = new Cse();
            c.setStudents("Deeptha");
           String stu =  c.getStusents();
        }

Polymorphysim ::
    poly -- many
    MOrpyshm - forms

    -- Over loading
    public void travel(String type)//bus,car
    public void travel(String type, int count)
    public void travel(String type, int count, String place)
    public void travel(String place, int count);
    public void travel(String type,long size)

    -- Over Riding
        Lane 1  - vehicle(String model)
        Lane 2  - vehicle(String model)
        Lane 3  - vehicle(String model)


    over loading ::
        Performaing same action with different parameters
        writing same method names with different parameters
      why::
        BCZ when we have same fucntional with different usability
            A car can used in different ways
    Over Riding ::
        Having same method name in different class(Example interface declaration)
        in interface we decalre and overide any many classes as u require.

    Run time polymorphysim ::
        overRiding
        While executing u will face an error if any issues in coiding

    Compiletime polymorpyshm ::
        Over loading
        while writing code itself , comipler will throw error


Topics of OOPS important ** revising
       Interface
       Abstract class
       Inheritance
       abstraction
       polymorpyshm
       encapsulation


Mock interview Concepts
    Constructor
    Access specifier
    class, object
    oops concepts
    Package, jvmm,jre,jdk
    Need each one example what ever i except.

Mock Interview Questions ::

    1. Create Java project -- 10
    2. Create Text file  --- 0
    3. what is class -- 8
    4. what is package -- 9
    5. Can u explain few deafult package  -9
    6. Java version -- 1
    7. what is object - 7
    8. super class of package - 10
    9. what is mean by oops -9
    10. different oops concept-  9
    11. what is constructor- 0
    12. can u create deafult constructor and use in other class - 5
    13. wt are access specifiers -10
    14. usage of protected -5
    15. Access modifiers -- 2
    16. Super - 9
    17. this - 9
    18. Wt is interface - 10
    19. wt is abstract class - 9
    18. Inheritance - 6
    19. Abstraction - 5
    20. Encapsulation - 7
    21. Polymorpyshm - 6
    22. over loading - 2
    23. over riding  - 2
    24. why, what, wher  - 0

-----

Basic functions java

    1. if else
    2. for loop
    3. enum
    4. switch case
    5. try catch
    6. for each

Questions ::
    1. Why string is immutable - done  need to study more
    2. diff btw interface, class and abstract class - done
    3. create pojo for ur class details - name, age, rollnum, and set and get values - done  - need to study more
    4. [1,2,3,4,5,6,7] -- iterate using for each loop and sum all numbers - done
    5. create enum and use in main class -- use Depatment (CSE,ECE,MECH) - done  - need to study more
    6. study about try cacth finally  - Done - need to study more and ask doubt
    7. create one class using over loading - Done
    8. create one example using over riding - Done
    9. create class and use extends - Done
    10. create abstarct and use extends -Done
    11. create interface and use implements - Done
    12. creaet static methods and re use in other class  - Done
    13. create non static methods and re use in other class - Done
    14. create returnable methods and resuse in other class - Done
    15. create constructor and re sue in other calss  - Done
    16. create parametrise constructor and resiue in other calss - Done
    17. create constructor and use super keywors - Done



1. Why String is immutable?
 because String objects are cached in String pool. Since cached String literals are shared between multiple clients there is always a risk,


 2. diff btw interface, class and abstract class

      Interface - hide implemtion and show declartion
      Abstract - which has implemention and declaration both
      Class - which has method, statis block, instace block, variable constructor, no just method declaratio n


  3. create pojo for ur class details - name, age, rollnum, and set and get values

   4. [1,2,3,4,5,6,7] -- iterate using for each loop and sum all numbers


Try Catch Finally ::

Every try block should be immediately followed either by a catch block or finally block.
code which is prone to exceptions is placed in the try block
exception occurs, that exception occurred is handled by catch block
Try{
Statement - code
}
Catch (exeption){
Statement - catch execption
}
Finally {
Statement --  // The finally block always executes.

}
Finally ::

finally block of code always executes, irrespective of occurrence of an Exception.


Tmrw's topics :;

    Heap memory
    Stack Momeory
    Core java and oops and COllections and Datastuctures and algorithms
    Threads,
    SingleTon,
    Finally,
    Exception
    Garbage
    serialization


Heap Memory ::
    -- on after creating an object, the reference of object will be store till class is ended
    Example :: i have only 20MG capacity
        Webdriver driver = new ChromeDeriver(); / 5MB memory
        Webdriver driver2 = new ChromeDeriver();/ 5MB memory
        Webdriver driver3 = new ChromeDeriver();/ 5MB memory
        Webdriver driver4 = new ChromeDeriver();/ 5MB memory
        Webdriver driver5 = new ChromeDeriver();/ 5MB memory
        Webdriver driver6 = new ChromeDeriver();/ 5MB memory
    -- this heam memory will store in JVM


Stack Memory ::
    Stack -- store one after the other -- LIFO -- Last in First OUT
    Example ::
        U have 5 applications running on ur laptop
            1. chrome
            2. intelij
            3. postman
         Chrome, Intelij, Postman
         int i=10;

Core Java ::
    -- Basic concepts of java
    -- inbuilt libraries
    -- packages
    -- inbulit functions
    -- classes, object, data types, keywords, operatores, methods,
    -- Thread, Variables, Loops, conditions, Strings, arrays


OOPS ::
    -- Inheritance
    -- polymorphysm
    -- abstraction
    -- encapsulation
    -- interface
    -- aver loading
    -- over riding
    -- constructor

Collections of Java::
    List, HashMap, set, queue,

    List  -- ArrayList, Lindlist, Stack
    set   -- HashSet, LinkdHashset
    Queue -- Array Queue, Deque

Data Structures ::
    Linear or symetric or dynamic
    List
    Queue
    Map
    Set
    Queue
    LinkedList
    Stack


TThread ::
    ClassA a = new ClassA();        // it will store in JVM heap memory
    Start ---- work and use it --- End

    -- its a execution of a program


DDoubts on COnstructors:: SUper in COnstructor





















